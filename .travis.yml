language: python
dist: trusty
python:
 - "2.7"
 - "3.6"

# no python3-wx before bionic
# no pyqt5 before xenial
# no pygtk for py3
# pygdk3 plugin is not compatible with trusty
# no python3-pyside before xenial
# no python-pyside2, python3-pyside2 before disco (19.04)
# no python-qtpy, python3-qtpy before bionic
matrix:
  include:
    - name: "2.7_trusty_with_system"
      python: "2.7_with_system_site_packages"
      dist: trusty
      env: PACKAGES="python-gtk2                           python-wxgtk2.8  python-qt4                    python-pyside             "  TESTS2="test_pygtk.py                test_wx.py test_pyqt4.py               test_pyside.py             "

    - name: "2.7_xenial_with_system"
      python: "2.7_with_system_site_packages"
      dist: xenial
      env: PACKAGES="python-gtk2 python-gi  gir1.2-gtk-3.0 python-wxgtk3.0  python-qt4     python-pyqt5   python-pyside             "  TESTS2="test_pygtk.py test_pygdk3.py test_wx.py test_pyqt4.py test_pyqt5.py test_pyside.py             " TESTS3="test_pygdk3_conflict.py"

    - name: "3.5_xenial_with_system"
      python: "3.5_with_system_site_packages"
      dist: xenial
      env: PACKAGES="            python3-gi gir1.2-gtk-3.0                  python3-pyqt4  python3-pyqt5  python3-pyside             " TESTS2="              test_pygdk3.py            test_pyqt4.py test_pyqt5.py test_pyside.py             " TESTS3="test_pygdk3_conflict.py"

    - name: "3.6_bionic_with_system"
      python: "3.6_with_system_site_packages"
      dist: bionic
      env: PACKAGES="            python3-gi gir1.2-gtk-3.0 python3-wxgtk4.0 python3-pyqt4  python3-pyqt5  python3-pyside python3-qtpy" TESTS2="              test_pygdk3.py test_wx.py test_pyqt4.py test_pyqt5.py test_pyside.py test_qtpy.py" TESTS3="test_pygdk3_conflict.py"

    - name: 3.7_xenial
      python: 3.7
      dist: xenial

    - name: 3.8_xenial
      python: 3.8
      dist: xenial

    - name: 3.7_bionic
      python: 3.7
      dist: bionic

    - name: 3.8_bionic
      python: 3.8
      dist: bionic

    - name: "Python 3.7 on macOS"
      os: osx
      osx_image: xcode11.2  # Python 3.7.4 running on macOS 10.14.4
      language: shell       # 'language: python' is an error on Travis CI macOS
      env: PATH=/Users/travis/Library/Python/3.7/bin:$PATH USER=--user

    - name: "Python 3.8 on Windows"
      os: windows           # Windows 10.0.17134 N/A Build 17134
      language: shell       # 'language: python' is an error on Travis CI Windows
      before_install:
        - choco install python --version 3.8
        - python -m pip install --upgrade pip
      env: PATH=/c/Python38:/c/Python38/Scripts:$PATH

addons:
  apt:
    packages: 
      - python-dev 
      - xvfb 
      - x11-utils 
      - x11-apps 
      - scrot 
      - imagemagick

install:
#  - sudo apt-get update -q
#  - sudo apt-get install --no-install-recommends -y python-dev xvfb x11-utils x11-apps
#  - sudo apt-get install --no-install-recommends -y scrot imagemagick 
 - if [ ${TRAVIS_OS_NAME} == "linux" ]; then sudo apt-get install --no-install-recommends -y $(echo $PACKAGES); fi
# - echo "TRAVIS_PYTHON_VERSION=$TRAVIS_PYTHON_VERSION"
 - if [ ${TRAVIS_PYTHON_VERSION:0:1} == "2" ]; then PIP=pip; else PIP=pip3; fi
 - $PIP install $USER --upgrade -r requirements-test.txt
 - $PIP install $USER --upgrade .
 - $PIP install $USER --upgrade coveralls
 - if [ ${TRAVIS_OS_NAME} == "osx" ]; then $PIP install $USER --upgrade pyobjc-framework-Quartz pyobjc-framework-LaunchServices; fi

script:  
 - cd tests 
 - if [ ${TRAVIS_OS_NAME} == "linux" ]; then TESTS1="test_scrot.py test_imagemagick.py"; fi
 - if [ ${TRAVIS_OS_NAME} == "osx" ]; then TESTS1="test_mac_screencapture.py test_mac_quartz.py"; fi
 - nosetests -vv --with-coverage --cover-package=pyscreenshot easy $TESTS1 $TESTS2
 - nosetests -vv notest.py $TESTS3
# - xauth add :0 . `mcookie`
  
after_success:
 - coveralls
